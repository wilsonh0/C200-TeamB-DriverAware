WITH
FlattenedDetections AS 
(
    SELECT 
        DeepStreamInput.sensorId,
        (SUBSTRING (arrayElement.ArrayValue, REGEXMATCH(arrayElement.ArrayValue, '\|[a-z]') + 1, LEN(arrayElement.ArrayValue))) as object,
        DeepStreamInput.[@timestamp], COUNT(DeepStreamInput.[@timestamp]) as matches
    FROM
        [DeepStreamInput] AS DeepStreamInput TIMESTAMP BY DeepStreamInput.[@timestamp] 
        CROSS APPLY GetArrayElements(objects) AS arrayElement 
    WHERE
       DeepStreamInput.[@timestamp]  != '1970-01-01T00:00:00.000Z' /*filter RTSP disconnections*/
       GROUP BY DeepStreamInput.[sensorId], 
                arrayElement, 
                DeepStreamInput.[@timestamp],
                SYSTEM.TIMESTAMP()
)

SELECT
    Count(object) AS count, /*Counting function*/
    sensorId, object, [@timestamp]
INTO [AggregatedDetections] 
FROM FlattenedDetections  
    WHERE matches = 1 /*Filter duplicates where (timestamp and object) are equal)*/
    GROUP BY
        sensorId,
        object,
        [@timestamp],
        TumblingWindow(second, 5)

SELECT 
    (SUM(count)) as count, /*Smoothing function*/
    object, sensorId, System.Timestamp AS [@timestamp]
INTO [SummarizedDetections]
FROM AggregatedDetections 
GROUP BY 
    object,
    sensorId,
    TumblingWindow(second, 5)


SELECT
sensorId,
"Normal" =
MAX(CASE
    WHEN object = 'Normal' THEN SD.count
    ELSE 0
END),
"Eyes Closed" =
MAX(CASE
    WHEN object = 'Eyes Closed' THEN SD.count
    ELSE 0
END),
"Yawn" =
MAX(CASE
    WHEN object = 'Yawn' THEN SD.count
    ELSE 0
END), 
SD."@timestamp"
INTO CombinedDetections
FROM SummarizedDetections AS SD
GROUP BY
    sensorId,
    SD."@timestamp",
    TumblingWindow(second, 5)

SELECT
sensorId,
Normal,
"Eyes Closed",
Yawn,
(CASE 
    WHEN ("Eyes Closed" + "Yawn") > "Normal"
    THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
) AS Drowsy,
"@timestamp"
INTO DrowsyDetections
FROM CombinedDetections
